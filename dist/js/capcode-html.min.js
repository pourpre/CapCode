var capcode = typeof capcode === "object" ? capcode : {}; capcode["html"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/html/js/capcode-html.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/core/js/capcode-utils.js":
/*!**************************************!*\
  !*** ./src/core/js/capcode-utils.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ajouterElement = ajouterElement;
exports.ajouterElementAvant = ajouterElementAvant;
exports.chargerFichier = chargerFichier;
exports.lireFichier = lireFichier;
exports.enregistrerFichier = enregistrerFichier;
/* UTILITAIRES
 * Manipulation de fichiers, du DOM...
 * ------------------------------------------------------------------------------------------ */

function creerElement(type) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var element = document.createElement(type);

    if (options.hasOwnProperty('id')) {
        // ID de l'élément
        element.id = options.id;
    }

    if (options.hasOwnProperty('text')) {
        // Texte de l'élément
        element.innerText = options.text;
    }

    if (options.hasOwnProperty('class')) {
        // Classes attribuées
        DOMTokenList.prototype.add.apply(element.classList, options.class);
    }

    if (options.hasOwnProperty('type')) {
        // type de l'élément input
        element.type = options.type;
    }

    if (options.hasOwnProperty('disabled')) {
        // Attribut DISABLED
        element.disabled = options.disabled;
    }

    if (options.hasOwnProperty('for')) {
        // Association des labels à leurs inputs
        element.htmlFor = options.for;
    }

    if (options.hasOwnProperty('src')) {
        // Attribut src
        element.src = options.src;
    }

    if (options.hasOwnProperty('href')) {
        // Attribut href
        element.href = options.href;
    }

    if (options.hasOwnProperty('title')) {
        // Attribut title
        element.title = options.title;
    }

    if (options.hasOwnProperty('target')) {
        // Attribut target
        element.target = options.target;
    }

    return element;
}

/* Fonction générique d'ajout d'un élément d'interface
 *
 * @param type (string) Type d'élément à insérer
 * @param parent (Element) Conteneur de l'élément créé
 * @param options (Object) Liste des options - 'id' : ID de l'élément créé, 'text' : contenu texte,
 *                                             'class' : tableau de classes à attribuer à l'élément,
 *                                             'disabled' : valeur de l'attribut DISABLED de l'élément
 */
function ajouterElement(type, parent) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    var nouvelElement = creerElement(type, options);
    parent.appendChild(nouvelElement);
    return nouvelElement;
}

function ajouterElementAvant(type, parent, reference) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    var nouvelElement = creerElement(type, options);
    parent.appendChild(nouvelElement, reference);
    return nouvelElement;
}

// Chargement du contenu d'un fichier à partir de son adresse
function chargerFichier(source, callback) {
    var f = new XMLHttpRequest();
    f.open('GET', source, false);
    f.overrideMimeType('text/plain');
    f.onreadystatechange = function () {
        if (f.readyState === 4) {
            if (f.status === 200 || f.status === 0) {
                callback(f.response);
            }
        }
    };
    f.send();
}

// Lecture d'un fichier
function lireFichier(fichier, callback) {
    var fileReader = new FileReader();
    fileReader.onload = function (event) {
        callback(event.target.result);
    };

    fileReader.readAsText(fichier, "UTF-8");
}

// Enregistrement
function enregistrerFichier(data, filename, type) {
    var file = new Blob([data], {
        type: type
    });
    if (window.navigator.msSaveOrOpenBlob) {
        // IE10+
        window.navigator.msSaveOrOpenBlob(file, filename);
    } else {
        // Others
        var a = document.createElement("a"),
            url = URL.createObjectURL(file);
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        setTimeout(function () {
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }, 0);
    }
}

/***/ }),

/***/ "./src/html/js/capcode-html.js":
/*!*************************************!*\
  !*** ./src/html/js/capcode-html.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _showdown = __webpack_require__(/*! showdown */ "showdown");

var _showdown2 = _interopRequireDefault(_showdown);

var _codemirror = __webpack_require__(/*! codemirror */ "codemirror");

var _codemirror2 = _interopRequireDefault(_codemirror);

var _perfectScrollbar = __webpack_require__(/*! perfect-scrollbar */ "perfect-scrollbar");

var _perfectScrollbar2 = _interopRequireDefault(_perfectScrollbar);

var _capcodeUtils = __webpack_require__(/*! ../../core/js/capcode-utils */ "./src/core/js/capcode-utils.js");

__webpack_require__(/*! ../style/capcode-html.scss */ "./src/html/style/capcode-html.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Les paramètres éventuellement passés dans le fichier markdown source sont accessibles via l'objet capcode.core.params */

var CONCEPTION = true;

var zoneDiapo = void 0,
    scrollbarDiapo = void 0,
    indexDiapo = void 0,
    editeurHtml = void 0,
    editeurCss = void 0,
    boutonGo = void 0,
    zoneEditeur = void 0,

// Fenêtre de rendu
outputWindow = void 0,
    outputWindowBody = void 0,
    // Noeud `body` de la fenêtre de rendu
outputWindowOpened = false,
    // Indicateur de fenêtre de rendu ouverte
outputWindowCss = void 0; // Feuille de style de la fenêtre de rendu

// Chargement de la page => initialisation de la coloration syntaxique dans le zone de saisies
document.addEventListener('capcodeCoreLoaded', function () {
    editeurHtml = _codemirror2.default.fromTextArea(document.getElementById("editeur-html"), {
        lineNumbers: true,
        theme: "capcode-light",
        lineWrapping: true,
        mode: "text/html",
        extraKeys: {
            'Ctrl-Enter': actualiser
        }
    });
    editeurHtml.setValue('<!-- Saissez ici le code HTML --> \n<p class="ma-classe">\n  Lorem ipsum\n</p>');

    editeurCss = _codemirror2.default.fromTextArea(document.getElementById("editeur-css"), {
        lineNumbers: true,
        theme: "capcode-light",
        lineWrapping: true,
        mode: "text/css",
        extraKeys: {
            'Ctrl-Enter': actualiser
        }
    });
    editeurCss.setValue('/* Saisissez ici le code CSS */ \n.ma-classe {\n  color: blue;\n}');

    // Saisie de HTML
    editeurHtml.on('change', function (event) {
        dispatchHtml();
    });

    // Saisie de CSS
    editeurCss.on('change', function (event) {
        dispatchCss();
    });
});

// Interface core en place => Finalisation de l'interface SQL
document.addEventListener('capcodeCoreInterface', function (event) {
    // Finalisation de l'interface (ajout de boutons spécifiques SQL...)
    var zoneActionsSQL = document.getElementById('actions-theme');

    // Bouton de sauvegarde de la saisie
    var imgLogo = (0, _capcodeUtils.ajouterElement)('img', zoneActionsSQL, {
        class: ['logo'],
        src: 'assets/html/logo_caphtml.svg'
    });

    boutonGo = document.getElementById('bouton-go');
    zoneEditeur = document.getElementById('zone-editeur');

    /* EVENEMENTS
     * ---------------------------------------------------------------------------------------------- */
    // Boutons d'action "Go"
    boutonGo.addEventListener('click', actualiser);
    boutonGo.classList.add('absent');

    // A chaque changement de diapo, actualisation des scrollbars
    document.addEventListener('capcodeCoreChgtDiapo', function (event) {
        indexDiapo = event.detail.index;
        scrollbarDiapo.update();
    });

    // Mise à jour des scrollbars
    zoneDiapo = document.getElementById('zone-diapo');
    scrollbarDiapo = new _perfectScrollbar2.default(zoneDiapo);
});

function actualiser() {
    console.log("Actualisation");

    outputWindow = window.open('html_output.html', "Capcode - Rendu HTML", "menubar=no, status=no, scrollbars=no, width=1024, height=768");
}

// ### Initialisation de la fenêtre de rendu

window.addEventListener('outputReady', function (event) {

    // Actualisation de l'indicateur
    outputWindowOpened = true;

    // Récupération du DOM et du CSS
    outputWindowBody = outputWindow.document.getElementById('body');
    outputWindowCss = outputWindow.document.styleSheets[0];

    // Chargement du HTML et du CSS
    dispatchHtml();
    dispatchCss();
});

// ### Actualisation du HTML

function dispatchHtml() {

    // Vers la fenêtre de rendu
    if (outputWindowOpened) {
        outputWindowBody.innerHTML = editeurHtml.getValue();
    }
}

// ### Actualisation du CSS

function dispatchCss() {

    // Vers la fenêtre de rendu
    if (outputWindowOpened) {
        updateCss(outputWindowCss);
    }
}

// Consitution de la feuille de styles à partir de la saisie

function updateCss(sheet) {

    // Consitution d'un tableau de règles CSS
    var arrRules = editeurCss.getValue().split('}'),
        nbRules = sheet.cssRules.length;

    // Effacement de la feuille de styles antérieure
    for (var i = 0; i < nbRules; i++) {
        sheet.deleteRule(0);
    }

    // Écriture de la nouvelle feuille de styles
    arrRules.forEach(function (rule, index) {
        if (index != arrRules.length - 1) {
            sheet.insertRule(rule + '}', sheet.cssRules.length);
        }
    });
}

/***/ }),

/***/ "./src/html/style/capcode-html.scss":
/*!******************************************!*\
  !*** ./src/html/style/capcode-html.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "codemirror":
/*!*****************************!*\
  !*** external "CodeMirror" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = CodeMirror;

/***/ }),

/***/ "perfect-scrollbar":
/*!***********************************!*\
  !*** external "PerfectScrollbar" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = PerfectScrollbar;

/***/ }),

/***/ "showdown":
/*!***************************!*\
  !*** external "showdown" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = showdown;

/***/ })

/******/ });
//# sourceMappingURL=capcode-html.min.js.map